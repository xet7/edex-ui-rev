name: Build packaged binaries

on: [push, pull_request, create]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # pnpm cache files are stored in `~/.pnpm-store` on Linux/macOS
        path: ~/.pnpm-store
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
    - name: Cache Electron binaries
      uses: actions/cache@v2
      env:
        cache-name: cache-electron-bins
      with:
        # cache location is described here:
        # https://github.com/electron/get#how-it-works
        path: ~/.cache/electron
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
    - name: Install system dependencies for x64->x32 cross-build
      run: |
        sudo apt update
        sudo apt install libc6-dev-i386 gcc-multilib g++-multilib
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Setup pnpm and install dependencies
      uses: pnpm/action-setup@v2.0.1
      with:
        version: 6.19.0
        run_install: true
    - name: Run prebuild script
      run: pnpm prebuild-linux
    - name: Build for x64 / ia32
      run: ./node_modules/.bin/electron-builder build -l --x64 --ia32
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions/upload-artifact@v2
      with:
        name: Linux-AppImages
        path: dist/*.AppImage
        if-no-files-found: error

  build-linux-arm32:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: arm
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.pnpm-store` on Linux/macOS
        path: ~/.pnpm-store
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
    - name: Cache Electron binaries
      uses: actions/cache@v2
      env:
        cache-name: cache-electron-bins
      with:
        # cache location is described here:
        # https://github.com/electron/get#how-it-works
        path: ~/.cache/electron
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
    - name: Setup pnpm and install dependencies
      uses: pnpm/action-setup@v2.0.1
      with:
        version: 6.19.0
        run_install: true
    - name: Run prebuild outside of QEMU emulator
      run: rsync -a --info=progress2 src/ prebuild-src --exclude node_modules && node prebuild-minify.js && rm -rf node_modules
    - name: Build for arm32v7 (aka armv7l)
      uses: docker://arm32v7/node:14-buster
      with:
        args: bash -c "npm i -g pnpm && pnpm install && ./node_modules/.bin/electron-builder build -l --armv7l"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions/upload-artifact@v2
      with:
        name: Linux-arm32-AppImage
        path: dist/*.AppImage
        if-no-files-found: error

  build-linux-arm64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: arm64
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # pnpm cache files are stored in `~/.pnpm-store` on Linux/macOS
        path: ~/.pnpm-store
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
    - name: Cache Electron binaries
      uses: actions/cache@v2
      env:
        cache-name: cache-electron-bins
      with:
        # cache location is described here:
        # https://github.com/electron/get#how-it-works
        path: ~/.cache/electron
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
    - name: Setup pnpm and install dependencies
      uses: pnpm/action-setup@v2.0.1
      with:
        version: 6.19.0
        run_install: true
    - name: Run prebuild outside of QEMU emulator
      run: rsync -a --info=progress2 src/ prebuild-src --exclude node_modules && node prebuild-minify.js && rm -rf node_modules
    - name: Build for arm64 (aka arm64v8)
      uses: docker://arm64v8/node:14-buster
      with:
        args: bash -c "npm i -g pnpm && pnpm install && ./node_modules/.bin/electron-builder build -l --arm64"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions/upload-artifact@v2
      with:
        name: Linux-arm64-AppImage
        path: dist/*.AppImage
        if-no-files-found: error

  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Get pnpm cache directory
      id: pnpm-cache
      run: |
        echo "::set-output name=dir::$(pnpm config get cache)"
    - uses: actions/cache@v2
      with:
        path: ${{ steps.npm-cache.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/pnpm-lock.yaml') }}
    - name: Cache Electron binaries
      uses: actions/cache@v2
      env:
        cache-name: cache-electron-bins
      with:
        # cache location is described here:
        # https://github.com/electron/get#how-it-works
        path: ~/AppData/Local/electron/Cache
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
    - name: Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14
    - name: Setup pnpm and install dependencies
      uses: pnpm/action-setup@v2.0.1
      with:
        version: 6.19.0
        run_install: true
    - name: npm build
      run: pnpm build-windows
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions/upload-artifact@v2
      with:
        name: Windows-Installer
        path: dist/*.exe
        if-no-files-found: error

  build-darwin:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # pnpm cache files are stored in `~/.pnpm-store` on Linux/macOS
        path: ~/.pnpm-store
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
    - name: Cache Electron binaries
      uses: actions/cache@v2
      env:
        cache-name: cache-electron-bins
      with:
        # cache location is described here:
        # https://github.com/electron/get#how-it-works
        path: ~/Library/Caches/electron
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
    - name: Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14
    - name: Setup pnpm and install dependencies
      uses: pnpm/action-setup@v2.0.1
      with:
        version: 6.19.0
        run_install: true
    - name: npm build
      run: pnpm build-darwin
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions/upload-artifact@v2
      with:
        name: MacOS-Image
        path: dist/*.dmg
        if-no-files-found: error
